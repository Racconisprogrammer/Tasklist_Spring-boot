<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.tasklist.repository.UserRepository">
    <resultMap id="UserResultMap" type="com.example.tasklist.domain.user.User" autoMapping="false">
        <id property="id" column="user_id"/>
        <result property="name" column="user_name"/>
        <result property="username" column="user_username"/>
        <result property="password" column="user_password"/>
        <collection property="roles"
                    ofType="com.example.tasklist.domain.user.Role"
                    autoMapping="false">
            <result property="name" column="user_role_role"/>
        </collection>
        <collection property="tasks"
                    ofType="com.example.tasklist.domain.task.Task"
                    resultMap="com.example.tasklist.repository.TaskRepository.TaskResultMap"
                    autoMapping="false"/>
    </resultMap>

    <select id="findById" resultMap="UserResultMap">
        SELECT u.id as user_id,
        u.name as user_name,
        u.username as user_username,
        u.password as user_password,
        ur.role as user_role_role,
        t.id as task_id,
        t.title as task_title,
        t.description as task_description,
        t.expiration_date as task_expiration_date,
        t.status as task_status
        FROM users u
        LEFT JOIN users_roles ur on u.id = ur.user_id
        LEFT JOIN users_tasks ut on u.id = ut.user_id
        LEFT JOIN tasks t on t.id = ut.task_id
        WHERE u.id = #{id}
    </select>

    <select id="findByUsername" resultMap="UserResultMap">
        SELECT u.id as user_id,
        u.name as user_name,
        u.username as user_username,
        u.password as user_password,
        ur.role as user_role_role,
        t.id as task_id,
        t.title as task_title,
        t.description as task_description,
        t.expiration_date as task_expiration_date,
        t.status as task_status
        FROM users u
        LEFT JOIN users_roles ur on u.id = ur.user_id
        LEFT JOIN users_tasks ut on u.id = ut.user_id
        LEFT JOIN tasks t on t.id = ut.task_id
        WHERE u.username = #{username}
    </select>

    <insert id="insertUserRole">
        INSERT INTO users_roles (user_id, role)
        values (#{userId}, #{role})
    </insert>

    <select id="isTaskOwner" resultType="boolean">
        SELECT exists(
        SELECT 1
        FROM users_tasks
        WHERE user_id = #{userId}
        AND task_id = #{taskId}
    </select>

    <update id="update">
        UPDATE users
        SET name = #{name},
        username = #{username},
        password = #{password}
        where id = #{id}
    </update>

    <insert id="create" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO users (name, username, password)
        values (#{name}, #{username}, #{password})
    </insert>

    <delete id="delete">
        DELETE FROM users
        WHERE id = #{id}
    </delete>

</mapper>